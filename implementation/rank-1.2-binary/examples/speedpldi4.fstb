
//Fast File Modified for ranking stuff - 2010, Mar 17,22:13:06

model speedpldi4{

//parameters i__o, m__o, n__o;

  var i, m, n, i__o, m__o, n__o;

  states stop, start, lbl_6, lbl_11_1, lbl_12_1, cut, ____start;

  transition t_21 :={
   from    := start ;
   to      := stop ;
   guard   := m<=0;
   action  := ;
  };


  transition t_25 :={
   from    := start ;
   to      := lbl_6 ;
   guard   := m>=1 && m>=n;
   action  := ;
  };


  transition t_35 :={
   from    := start ;
   to      := lbl_12_1 ;
   guard   := m>=1 && m+1<=n;
   action  := i' = n - m;
  };


  transition t_3 :={
   from    := lbl_6 ;
   to      := stop ;
   guard   := true;
   action  := ;
  };


  transition t_27 :={
   from    := lbl_11_1 ;
   to      := cut ;
   guard   := i<=0;
   action  := ;
  };


  transition t_28 :={
   from    := lbl_11_1 ;
   to      := lbl_11_1 ;
   guard   := i>=1 && i+1<=m;
   action  := i' = i - 1;
  };


  transition t_29 :={
   from    := lbl_11_1 ;
   to      := lbl_12_1 ;
   guard   := i>=1 && i>=m;
   action  := i' = i - m;
  };


  transition t_30 :={
   from    := lbl_12_1 ;
   to      := cut ;
   guard   := i<=0;
   action  := ;
  };


  transition t_31 :={
   from    := lbl_12_1 ;
   to      := lbl_11_1 ;
   guard   := i>=1 && i+1<=m;
   action  := i' = i - 1;
  };


  transition t_32 :={
   from    := lbl_12_1 ;
   to      := lbl_12_1 ;
   guard   := i>=1 && i>=m;
   action  := i' = i - m;
  };


  transition fromCut :={
   from    := cut ;
   to      := stop ;
   guard   := true;
   action  := ;
  };


  transition ____inittransition :={
   from    := ____start ;
   to      := start ;
   guard   := true;
   action  := i' = i__o,m' = m__o,n' = n__o;
  };


}

strategy xx {

Region init:={ state = ____start && true};

}


// Result of Analysis  
//invariant stop := m=m__o && n=n__o ;
//invariant start := n=n__o && m=m__o && i=i__o ;
//invariant lbl_6 := m>=1 && m>=n && i=i__o && m=m__o && n=n__o ;
//invariant lbl_11_1 := i>=0 && i+m+1<=n && i+2<=m && m=m__o && n=n__o ;
//invariant lbl_12_1 := m+1<=n && m>=1 && i>=0 && i+m<=n && m=m__o && n=n__o ;
//invariant cut := m>=1 && m+1<=n && i=0 && m=m__o && n=n__o ;
//invariant ____start := true ;
